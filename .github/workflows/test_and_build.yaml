name: Test and build

on:
  push:
    branches: ['**']
  pull_request:

permissions:
  contents: read

jobs:
  test_and_build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: fumigaciones_db
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=5s
          --health-timeout=2s
          --health-retries=20
        ports:
          - 3306:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install OS deps for mysqlclient
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc default-libmysqlclient-dev

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Init schema
        run: |
          mysql -h 127.0.0.1 -uroot fumigaciones_db <<'SQL'
          CREATE TABLE IF NOT EXISTS consumidores (
            id INT AUTO_INCREMENT PRIMARY KEY,
            nombre VARCHAR(100) NOT NULL,
            email VARCHAR(120) NOT NULL UNIQUE,
            direccion VARCHAR(200)
          );
          CREATE TABLE IF NOT EXISTS tecnicos (
            id INT AUTO_INCREMENT PRIMARY KEY,
            nombre VARCHAR(100) NOT NULL,
            telefono VARCHAR(50),
            especialidad VARCHAR(100)
          );
          CREATE TABLE IF NOT EXISTS administradores (
            id INT AUTO_INCREMENT PRIMARY KEY,
            nombre VARCHAR(100) NOT NULL,
            email VARCHAR(120) NOT NULL UNIQUE
          );
          SQL

      - name: Run tests with coverage
        run: pytest -q --cov=src --cov-report=term-missing
